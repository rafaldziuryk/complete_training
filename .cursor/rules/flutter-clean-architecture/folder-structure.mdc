---
globs: *.dart
alwaysApply: true
---
# Clean Architecture Folder Structure

## MANDATORY: Expected Folder Structure

### Core Structure
```
lib/
├── core/                          # Shared logic (e.g. utils, themes, localization)
├── features/
│   └── feature_name/
│       ├── data/
│       │   ├── datasources/       # Remote and local data sources
│       │   ├── models/            # DTOs, API models, storage models
│       │   └── repositories/      # Implementations of domain repositories
│       ├── domain/
│       │   ├── entities/          # Business models (pure Dart classes)
│       │   ├── repositories/      # Abstract repository interfaces
│       │   └── usecases/          # Business logic
│       └── presentation/
│           ├── pages/             # Full UI screens (Page = Route)
│           ├── widgets/           # Reusable UI components
│           └── bloc/              # BLoC pattern implementation
└── main.dart                      # Entry point, dependency injection with get_it, routing
```

### Feature Structure Requirements
- **Each feature MUST have its own folder** under `features/`
- **Feature names MUST use snake_case** (e.g., `user_profile`, `auth_login`)
- **Each layer MUST be separated** (data, domain, presentation)
- **BLoC files MUST be in separate folder** under `presentation/bloc/`

### Layer Dependencies
- **Presentation layer MUST depend only on domain/** - never directly on data/
- **Domain layer MUST be independent** of data and presentation
- **Data layer MUST implement domain interfaces**

### File Naming Conventions
- **All files MUST use snake_case** naming
- **Feature folders MUST use snake_case**
- **BLoC files MUST be named**: `*_bloc.dart`, `*_event.dart`, `*_state.dart`

## ❌ Violations
- Feature folder not following snake_case
- BLoC files not in separate folder under `presentation/bloc/`
- Presentation layer importing from `data/` directly
- Missing required folders (data, domain, presentation)
- Files not following snake_case naming

## ✅ Correct Examples
```
lib/features/auth/
├── data/
│   ├── datasources/
│   ├── models/
│   └── repositories/
├── domain/
│   ├── entities/
│   ├── repositories/
│   └── usecases/
└── presentation/
    ├── pages/
    ├── widgets/
    └── bloc/
        ├── auth_bloc.dart
        ├── auth_event.dart
        └── auth_state.dart
```
